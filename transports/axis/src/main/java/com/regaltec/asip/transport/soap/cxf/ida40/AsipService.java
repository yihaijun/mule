
/*
 * 
 */

package com.regaltec.asip.transport.soap.cxf.ida40;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.3
 * 2011-03-10T18:03:37.885+08:00
 * Generated source version: 2.3.3
 * 
 */


@WebServiceClient(name = "AsipService", 
                  wsdlLocation = "http://132.228.169.145/AsipService?wsdl",
                  targetNamespace = "http://www.regaltec.com.cn/ida40") 
public class AsipService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.regaltec.com.cn/ida40", "AsipService");
    public final static QName AsipServiceSOAP = new QName("http://www.regaltec.com.cn/ida40", "AsipServiceSOAP");
    static {
        URL url = null;
        try {
            url = new URL("http://132.228.169.145/AsipService?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://132.228.169.145/AsipService?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public AsipService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AsipService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AsipService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    
//    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
//    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
//    //compliant code instead.
//    public AsipService(WebServiceFeature ... features) {
//        super(WSDL_LOCATION, SERVICE, features);
//    }
//
//    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
//    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
//    //compliant code instead.
//    public AsipService(URL wsdlLocation, WebServiceFeature ... features) {
//        super(wsdlLocation, SERVICE, features);
//    }
//
//    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
//    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
//    //compliant code instead.
//    public AsipService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
//        super(wsdlLocation, serviceName, features);
//    }

    /**
     * 
     * @return
     *     returns AsipServicePort
     */
    @WebEndpoint(name = "AsipServiceSOAP")
    public AsipServicePort getAsipServiceSOAP() {
        return super.getPort(AsipServiceSOAP, AsipServicePort.class);
    }

//    /**
//     * 
//     * @param features
//     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
//     * @return
//     *     returns AsipServicePort
//     */
//    @WebEndpoint(name = "AsipServiceSOAP")
//    public AsipServicePort getAsipServiceSOAP(WebServiceFeature... features) {
//        return super.getPort(AsipServiceSOAP, AsipServicePort.class, features);
//    }

}
